<?xml version="1.0"?>
<launch>
    <!--espace de commande de la machine -->
    <arg name="master_name"  default="$(env MASTER)"/>
    <arg name="robot_name"   default="$(env HOST)" />
    <arg name="lidar"        default="$(env LIDAR_TYPE)"/>

    <!--si il faut utiliser la simulation-->
    <arg name="sim"                 default="true"/>
    <arg name="app"                 default="true"/>
    <arg name="use_joy"             default="false"/>

    <arg name="usb_cam_name"        default="usb_cam"/>
    <arg name="set_pose"            default="false"/>

    <arg name="enable_odom"         default="true"/>

    <!--utiliser ou non la caméra rgbd pour simuler le radar-->
    <arg name="use_depth_camera"    default="false" />

    <!--limitation de vitesse pour le joystick de control-->
    <arg     if="$(arg sim)" name="max_linear"  default="0.7"/>
    <arg unless="$(arg sim)" name="max_linear"  default="0.2"/>
    <arg     if="$(arg sim)" name="max_angular" default="3.5"/>
    <arg unless="$(arg sim)" name="max_angular" default="0.5"/>

    <!--topic and frame settings-->
    <arg      if="$(eval robot_name == '/')"    name="topic_prefix" default=""/>
    <arg unless="$(eval robot_name == '/')"     name="topic_prefix" default="/$(arg robot_name)"/>
    <arg      if="$(eval robot_name == '/')"    name="frame_prefix" default=""/>
    <arg unless="$(eval robot_name == '/')"     name="frame_prefix" default="$(arg robot_name)/"/>
    <arg      if="$(eval robot_name == '/')"    name="tf_prefix"    default=""/>
    <arg unless="$(eval robot_name == '/')"     name="tf_prefix"    default="$(arg robot_name)"/>

    <arg name="cmd_vel_topic"       default="$(arg topic_prefix)/cmd_vel"/>
    <arg name="scan_raw"            default="$(arg topic_prefix)/scan_raw"/>
    <arg name="depth_camera_name"   default="depth_cam"/>
    <arg name="depth_camera_frame"  default="$(arg frame_prefix)$(arg depth_camera_name)_frame"/>
    <arg name="scan_topic"          default="$(arg topic_prefix)/scan"/>
    <arg name="odom_raw_topic"      default="$(arg topic_prefix)/odom_raw"/>
    <arg name="odom_lidar_topic"    default="$(arg topic_prefix)/odom_lidar"/>
    <arg name="odom_topic"          default="$(arg topic_prefix)/odom"/>
    <arg name="imu_raw_topic"       default="$(arg topic_prefix)/ros_robot_controller/imu_raw"/>
    <arg name="imu_topic"           default="$(arg topic_prefix)/imu"/>

    <arg     if="$(eval robot_name == master_name)" name="map_frame" default="$(arg frame_prefix)map"/>
    <arg unless="$(eval robot_name == master_name)" name="map_frame" default="$(arg master_name)/map"/>
    <arg name="odom_frame"          default="$(arg frame_prefix)odom"/>
    <arg name="base_frame"          default="$(arg frame_prefix)base_footprint"/>
    <arg name="lidar_frame"         default="$(arg frame_prefix)lidar_frame"/>
    <arg name="imu_link"            default="$(arg frame_prefix)imu_link"/>

    <group ns="$(arg robot_name)">
        <!--chargement du modèle urdf du robot-->
        <param if="$(arg sim)" name="robot_description" command="$(find xacro)/xacro '$(find jetauto_description)/xacro/jetauto.xacro'" />

        <!--version tf statique-->
        <node if="$(arg sim)"  pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
            <param name="tf_prefix" value="$(arg tf_prefix)" />
        </node>

        <!--si il faut utiliser la simulation-->
        <group unless="$(arg sim)">
            <!--camera rgbd allumée-->
            <include file="$(find hiwonder_peripherals)/launch/depth_cam.launch">
                <arg name="app"                 value="$(arg app)"/>
                <arg name="depth_camera_name"   value="$(arg depth_camera_name)" />
                <arg name="tf_prefix"           value="$(arg tf_prefix)" />
            </include>

            <!--radar activé-->
            <include unless="$(arg use_depth_camera)" file="$(find hiwonder_peripherals)/launch/lidar.launch">
                <arg name="scan_topic"  value="$(arg scan_raw)" />
                <arg name="lidar_frame" value="$(arg lidar_frame)" />
            </include>

            <!--version odom du pilote du chassis-->
            <include file="$(find hiwonder_controller)/launch/hiwonder_controller.launch" >
                <arg name="enable_odom"      value="$(arg enable_odom)"/>
                <arg name="odom_topic"       value="$(arg odom_topic)" />
                <arg name="odom_raw_topic"   value="$(arg odom_raw_topic)" />
                <arg name="odom_lidar_topic" value="$(arg odom_lidar_topic)" />
                <arg name="scan_topic"       value="$(arg scan_raw)" />
                <arg name="base_frame"       value="$(arg base_frame)" />
                <arg name="odom_frame"       value="$(arg odom_frame)" />
                <arg name="map_frame"        value="$(arg map_frame)"/>
                <arg name="cmd_vel"          value="$(arg cmd_vel_topic)" />
                <arg name="imu_raw_topic"    value="$(arg imu_raw_topic)" />
                <arg name="imu_topic"        value="$(arg imu_topic)" />
                <arg name="imu_link"         value="$(arg imu_link)" />
                <arg name="tf_prefix"        value="$(arg tf_prefix)" />
            </include>
        </group>

        <group if="$(arg use_depth_camera)">
            <!--caméra rgbd comme radar simulé-->
            <include file="$(find hiwonder_slam)/launch/include/depthimage_to_laserscan.launch">
                <arg name="depth_topic"         value="$(arg topic_prefix)/$(arg depth_camera_name)/depth/image_raw" />
                <arg name="camera_info_topic"   value="$(arg topic_prefix)/$(arg depth_camera_name)/depth/camera_info" />
                <arg name="output_frame_id"     value="$(arg topic_prefix)/$(arg depth_camera_name)_link" />
            </include>
        </group>

        <group unless="$(arg use_depth_camera)">
            <!--filtre radar-->
            <node unless="$(arg sim)" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
                                <rosparam if="$(eval lidar != 'G4')" ns="scan_filter_chain" subst_value="true">
                                  - name: angle
                                    type: laser_filters/LaserScanAngularBoundsFilterInPlace
                                    params:
                                            lower_angle: -1.6
                                            upper_angle: 1.6
                                </rosparam>
                                <rosparam if="$(eval lidar == 'G4')" ns="scan_filter_chain" subst_value="true">
                                  - name: angle
                                    type: laser_filters/LaserScanAngularBoundsFilter
                                    params:
                                            lower_angle: -1.6
                                            upper_angle: 1.6
                                </rosparam>
                <remap from="scan" to="$(arg scan_raw)" />
                <remap from="scan_filtered" to="$(arg scan_topic)" />
            </node>
            <node if="$(arg sim)" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
                                <rosparam ns="scan_filter_chain" subst_value="true">
                                  - name: angle
                                    type: laser_filters/LaserScanAngularBoundsFilterInPlace
                                    params:
                                            lower_angle: 1.54
                                            upper_angle: 4.71
                                </rosparam>
                <remap from="scan" to="$(arg scan_raw)" />
                <remap from="scan_filtered" to="$(arg scan_topic)" />
            </node>
        </group>

        <!--noued ROS Robot Controller -->
	<!-- 
        <include if="$(arg sim)" file="$(find ros_robot_controller)/launch/ros_robot_controller_node.launch">
            <arg name="imu_link" value="$(arg imu_link)"/>
        </include> 
	-->

        <!--lancement du joystick de control -->
        <include if="$(arg use_joy)" file="$(find hiwonder_peripherals)/launch/joystick_control.launch" >
            <arg name="max_linear"  value="$(arg max_linear)"/>
            <arg name="max_angular" value="$(arg max_angular)"/>
            <arg name="cmd_vel"     value="$(arg cmd_vel_topic)"/>
        </include> 

        <!--posture du bras robotique-->
        <node if="$(arg set_pose)" name="init_pose" pkg="hiwonder_slam" type="init_pose.py" output="screen">
            <param name="horizontal"  value="true"/>
        </node>
    </group>
</launch>
